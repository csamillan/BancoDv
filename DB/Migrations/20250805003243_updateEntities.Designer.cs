// <auto-generated />
using System;
using DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DB.Migrations
{
    [DbContext(typeof(BancoDbContext))]
    [Migration("20250805003243_updateEntities")]
    partial class updateEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DB.Entities.Account", b =>
                {
                    b.Property<string>("NumberAccount")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<byte>("AccountType")
                        .HasPrecision(12, 2)
                        .HasColumnType("tinyint");

                    b.Property<string>("ClientIdentityDocument")
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("IdentityDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("InitialBalance")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("NumberAccount");

                    b.HasIndex("ClientIdentityDocument");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("DB.Entities.Client", b =>
                {
                    b.Property<string>("IdentityDocument")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<byte>("Gender")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdentityDocument");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("DB.Entities.Transactions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumberAccount")
                        .HasColumnType("nvarchar(12)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Sald")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.Property<string>("TypeMovement")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Value")
                        .HasPrecision(12, 2)
                        .HasColumnType("decimal(12,2)");

                    b.HasKey("Id");

                    b.HasIndex("AccountNumberAccount");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("DB.Entities.Account", b =>
                {
                    b.HasOne("DB.Entities.Client", "Client")
                        .WithMany("Accounts")
                        .HasForeignKey("ClientIdentityDocument");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("DB.Entities.Transactions", b =>
                {
                    b.HasOne("DB.Entities.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountNumberAccount");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("DB.Entities.Account", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("DB.Entities.Client", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
